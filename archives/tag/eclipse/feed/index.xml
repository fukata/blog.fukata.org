<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Eclipse &#8211; blog.fukata.org</title>
	<atom:link href="/archives/tag/eclipse/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>旅するプログラマ</description>
	<lastBuildDate>Fri, 11 Aug 2017 22:58:50 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.6</generator>
	<item>
		<title>Mac版Eclipseで頻繁に使用するキーボードショートカット一覧 &#8211; Java編</title>
		<link>/archives/6720/</link>
					<comments>/archives/6720/#respond</comments>
		
		<dc:creator><![CDATA[fukata]]></dc:creator>
		<pubDate>Wed, 28 Dec 2011 00:37:43 +0000</pubDate>
				<category><![CDATA[開発]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[キーボードショートカット]]></category>
		<category><![CDATA[ショートカット]]></category>
		<guid isPermaLink="false">http://fukata.org/2011/12/28/useful-mac-eclipse-keyboard-shortcut-java/</guid>

					<description><![CDATA[以前、Eclipseで頻繁に使用するキーボードショートカット一覧 – Java編で、WindowsでのEclipseのショートカット一覧を書きましたが、最近Mac版Eclipseで開発することが多いの ... <a href="/archives/6720/"> 続きを読む</a>]]></description>
										<content:encoded><![CDATA[<p>以前、<a href="https://fukata.org/2010/05/30/useful-eclipse-keyboard-shortcut-java/">Eclipseで頻繁に使用するキーボードショートカット一覧 – Java編</a>で、WindowsでのEclipseのショートカット一覧を書きましたが、最近Mac版Eclipseで開発することが多いので、Mac版Eclipseでのショートカットを載せておきたいと思います。</p>
<h2>入力系</h2>
<ul>
<li><strong>Ctrl+Space</strong>：Content Assist &#8211; コンテンツアシスト</li>
<li><strong>Command+/</strong>：Toggle Comment &#8211; １行コメントの有効・無効（複数行の範囲指定可）</li>
<li><strong>Command+D</strong>：Delete Line &#8211; １行削除（複数行の範囲指定可）</li>
<li><strong>Command+1</strong>：Quick Fix &#8211; カーソル位置のエラー等の解決方法を表示</li>
<li><strong>Alt+Command+R</strong>：Rename &#8211; クラス名、変数名等のリネーム</li>
<li><strong>Alt+Up[Down]</strong>：Move Lines Up[Down] &#8211; カーソル行を上[下]に移動（複数行の範囲指定可）</li>
<li><strong>Command+Alt+Up[Down]</strong>：Duplicate Lines[Copy Lines]カーソル行を上[下]にコピー（複数行の範囲指定可）</li>
<li><strong>Command+Shift+F</strong>：Format &#8211; コードのフォーマット（フォーマット対象の範囲指定可）</li>
<li><strong>Command+Shift+O</strong>：Organize Imports &#8211; import文の整理</li>
</ul>
<h2>検索系</h2>
<ul>
<li><strong>Command+F</strong>：Find and Replace &#8211; ファイル内検索・置換</li>
<li><strong>Command+J</strong>：Incremental Find &#8211; インクリメンタル検索</li>
<li><strong>Command+O</strong>：Quick Outline &#8211; カーソル位置のクラスのメソッド一覧を表示</li>
<li><strong>Command[+Shift]+K</strong>：Find Next[Previous] &#8211; 範囲指定語句の後方[前方]移動</li>
<li><strong>Next[+Shift]+.</strong>：Next[Previous] &#8211; エラー等の後方[前方]移動</li>
<li><strong>Shift+F2</strong>：Open External Javadoc &#8211; カーソル位置のクラス、インタフェース等のJavaDocへ移動</li>
<li><strong>F3</strong>：Open Declaration &#8211; カーソル位置のクラス、インタフェース、変数等の宣言場所へ移動</li>
<li><strong>Command+Shift+P</strong>：Go to Matching Backlet &#8211; 対応する括弧へ移動</li>
<li><strong>F4</strong>：Open Type Hierarchy &#8211; カーソル位置のクラスの継承関係を表示</li>
<li><strong>Command+T</strong>：Quick Hierarchy &#8211; カーソル位置のクラスの継承関係を表示</li>
<li><strong>Command+Shift+R</strong>：Open Resource &#8211; リソース検索</li>
<li><strong>Command+Shift+T</strong>：Open Type &#8211; クラス、インタフェース等の検索</li>
<li><strong>Ctrl+Alt+H</strong>：Open Call Hierarchy &#8211; メソッド等の使用箇所を表示</li>
</ul>
<h2>その他</h2>
<ul>
<li><strong>Command+F8</strong>：Next Perspective &#8211; 次のパースペクティブを表示</li>
<li><strong>Shift+Alt+X</strong>：Run As &#8211; 実行形式を選択</li>
<li><strong>Shift+Alt+D</strong>：Debug As &#8211; デバッグ形式を選択</li>
<li><strong>Ctrl+PageUp[PageDown]</strong>：Next[Previous] Tabタブの切り替え</li>
<li><strong>Command+Shift+L</strong>：Show Key Assist &#8211; ショートカット一覧表示</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>/archives/6720/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Eclipse Indigo PDTでMakeGoodを動かしてみた</title>
		<link>/archives/6021/</link>
					<comments>/archives/6021/#respond</comments>
		
		<dc:creator><![CDATA[fukata]]></dc:creator>
		<pubDate>Wed, 10 Aug 2011 02:51:18 +0000</pubDate>
				<category><![CDATA[開発]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[MakeGood PHPUnit CIUnit]]></category>
		<guid isPermaLink="false">http://fukata.org/?p=6021</guid>

					<description><![CDATA[Eclipse IndigoにPDTを入れた環境に下記を参考にMakeGoodの実行環境を整えてみました。 Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する &#82 ... <a href="/archives/6021/"> 続きを読む</a>]]></description>
										<content:encoded><![CDATA[<p>Eclipse IndigoにPDTを入れた環境に下記を参考にMakeGoodの実行環境を整えてみました。</p>
<p><a href="https://d.hatena.ne.jp/Kenji_s/20110722/1311314734">Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する &#8211; A Day in Serenity @ Kenji</a></p>
<p>MakeGoodのPerspectiveに「まだ、設定が完了してないよ」というメッセージが表示されっぱなしで、少しハマったのですが、include pathに/usr/share/phpが含まれておらず、PHPUnitが使えていなかっただけだったという事もありましたが、最終的には正常に動作させることができました。（もしかして、前回利用できなかったのが同じ原因かもしれません）</p>
<h2>MakeGoodでよく使うコマンド一覧</h2>
<ul>
<li><strong>Alt+M A</strong>: 全テスト実行</li>
<li><strong>Alt+M F</strong>: ファイル内のテスト実行</li>
<li><strong>Alt+M L</strong>: クラス内のテスト実行</li>
<li><strong>Alt+M C</strong>: 現在カーソル位置にあるコンテキストのテスト実行</li>
<li><strong>Alt+M S</strong>: テストの中止</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>/archives/6021/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>[Eclipse]EGitで追加したリポジトリをリストから消す方法</title>
		<link>/archives/5733/</link>
					<comments>/archives/5733/#respond</comments>
		
		<dc:creator><![CDATA[fukata]]></dc:creator>
		<pubDate>Wed, 08 Jun 2011 08:37:57 +0000</pubDate>
				<category><![CDATA[開発]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[EGit]]></category>
		<category><![CDATA[git]]></category>
		<guid isPermaLink="false">http://fukata.org/?p=5733</guid>

					<description><![CDATA[ローカルのリポジトリをEGitに認識させた後に、やっぱり不要になり、リストから削除しようと思っても削除のやり方が分からなかったので、かなり強引ですがメモ程度に書いておきます。EGitのGUIとしては存 ... <a href="/archives/5733/"> 続きを読む</a>]]></description>
										<content:encoded><![CDATA[<p>ローカルのリポジトリをEGitに認識させた後に、やっぱり不要になり、リストから削除しようと思っても削除のやり方が分からなかったので、かなり強引ですがメモ程度に書いておきます。EGitのGUIとしては存在しないようで、下記のファイルを直接編集しました。</p>
<blockquote><p>[ワークスペース]/.metadata/org.eclipse.core.runtime/.settings/org.eclipse.egit.core.prefs</p></blockquote>
<p>上記のファイルにはリポジトリのパスなどが記載されているので、不要なリポジトリのパスを削除してやれば、大丈夫です。念の為、このファイルを編集する際は、Eclipseは閉じておいた方が良いと思います。</p>
<p>また、Linux版Eclipseでの話なので、Windows版の場合は若干異なったりするかもしれません。</p>
]]></content:encoded>
					
					<wfw:commentRss>/archives/5733/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Eclipseで頻繁に使用するキーボードショートカット一覧 &#8211; Java編</title>
		<link>/archives/4482/</link>
					<comments>/archives/4482/#comments</comments>
		
		<dc:creator><![CDATA[fukata]]></dc:creator>
		<pubDate>Sun, 30 May 2010 12:51:18 +0000</pubDate>
				<category><![CDATA[開発]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[キーボードショートカット]]></category>
		<category><![CDATA[ショートカット]]></category>
		<guid isPermaLink="false">http://fukata.org/?p=4482</guid>

					<description><![CDATA[Mac版Eclipseのショートカットはこちらになります。 Javaはもちろんのこと、最近ではPHPやPython、Rubyなどでも利用することが多くなった統合開発環境のEclipseですが、普通に使 ... <a href="/archives/4482/"> 続きを読む</a>]]></description>
										<content:encoded><![CDATA[<p>Mac版Eclipseのショートカットは<a href="https://fukata.org/2011/12/28/useful-mac-eclipse-keyboard-shortcut-java/">こちら</a>になります。</p>
<p>Javaはもちろんのこと、最近ではPHPやPython、Rubyなどでも利用することが多くなった統合開発環境のEclipseですが、普通に使用していたのでは、ただのテキストエディタとあまり変わりません。</p>
<p>タッチタイピングは前提として、キーボードショートカットを多用すれば良いのです。</p>
<h2>入力系</h2>
<ul>
<li><strong>Ctrl+Space</strong>：Content Assist &#8211; コンテンツアシスト</li>
<li><strong>Ctrl+/</strong>：Toggle Comment &#8211; １行コメントの有効・無効（複数行の範囲指定可）</li>
<li><strong>Ctrl+D</strong>：Delete Line &#8211; １行削除（複数行の範囲指定可）</li>
<li><strong>Ctrl+1</strong>：Quick Fix &#8211; カーソル位置のエラー等の解決方法を表示</li>
<li><strong>Alt+Shift+R</strong>：Rename &#8211; クラス名、変数名等のリネーム</li>
<li><strong>Alt+Up[Down]</strong>：Move Lines Up[Down] &#8211; カーソル行を上[下]に移動（複数行の範囲指定可）</li>
<li><strong>Ctrl+Alt+Up[Down]</strong>：Duplicate Lines[Copy Lines]カーソル行を上[下]にコピー（複数行の範囲指定可）</li>
<li><strong>Ctrl+Shift+F</strong>：Format &#8211; コードのフォーマット（フォーマット対象の範囲指定可）</li>
<li><strong>Ctrl+Shift+O</strong>：Organize Imports &#8211; import文の整理</li>
</ul>
<h2>検索系</h2>
<ul>
<li><strong>Ctrl+F</strong>：Find and Replace &#8211; ファイル内検索・置換</li>
<li><strong>Ctrl+J</strong>：Incremental Find &#8211; インクリメンタル検索</li>
<li><strong>Ctrl+O</strong>：Quick Outline &#8211; カーソル位置のクラスのメソッド一覧を表示</li>
<li><strong>Ctrl[+Shift]+K</strong>：Find Next[Previous] &#8211; 範囲指定語句の後方[前方]移動</li>
<li><strong>Ctrl+.[,]</strong>：Next[Previous] &#8211; エラー等の後方[前方]移動</li>
<li><strong>Shift+F2</strong>：Open External Javadoc &#8211; カーソル位置のクラス、インタフェース等のJavaDocへ移動</li>
<li><strong>F3</strong>：Open Declaration &#8211; カーソル位置のクラス、インタフェース、変数等の宣言場所へ移動</li>
<li><strong>Ctrl+Shift+P</strong>：Go to Matching Backlet &#8211; 対応する括弧へ移動</li>
<li><strong>F4</strong>：Open Type Hierarchy &#8211; カーソル位置のクラスの継承関係を表示</li>
<li><strong>Ctrl+T</strong>：Quick Hierarchy &#8211; カーソル位置のクラスの継承関係を表示</li>
<li><strong>Ctrl+Shift+R</strong>：Open Resource &#8211; リソース検索</li>
<li><strong>Ctrl+Shift+T</strong>：Open Type &#8211; クラス、インタフェース等の検索</li>
<li><strong>Ctrl+Alt+H</strong>：Open Call Hierarchy &#8211; メソッド等の使用箇所を表示</li>
</ul>
<h2>その他</h2>
<ul>
<li><strong>Ctrl+F8</strong>：Next Perspective &#8211; 次のパースペクティブを表示</li>
<li><strong>Shift+Alt+X</strong>：Run As &#8211; 実行形式を選択</li>
<li><strong>Shift+Alt+D</strong>：Debug As &#8211; デバッグ形式を選択</li>
<li><strong>Ctrl+PageUp[PageDown]</strong>：Next[Previous] Tabタブの切り替え</li>
<li><strong>Ctrl+Shift+L</strong>：Show Key Assist &#8211; ショートカット一覧表示</li>
</ul>
<p>上記は個人的に頻繁に使用しているWindows版Eclipseのキーボードショートカットですが、これだけでもマスターして使えばかなり効率化されます。Javaコードに対する固有のショートカットなども含まれていると思います。MacOX版については実行環境がないので分かりませんが、Windows版とLinux版でデフォルトのショートカットが若干違うようです。（ファイル保存やコピー＆ペーストなどの基本的なショートカットは省略しています。）</p>
<p>Eclipseを使う場合にはプログラムを左側から順に入力するのではなく、これらのキーボードショートカットを活用し極力タイピング量を減らすことでさらに効率良くなります。</p>
<p>また、マウスを利用するよりもキーボードメインにした方が手を常にキーボードに置くことができるので無駄な動作が減ります。どうしてもマウスを使わないといけない場合でも、Thinkpadなどのトラックポインタ付きキーボードを使えば極力キーボードから手を離さなくて良いのでコーディングに向いていると言えるでしょう。個人的にかもしれませんが、日本語配列よりも英語配列の方がコーディング時に使用頻度の高い記号（波括弧や丸括弧など）が使い易い配置になっているので、個人的には英語配列を好んで使用しています。</p>
<p><iframe src="https://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&#038;bc1=FFFFFF&#038;IS2=1&#038;bg1=FFFFFF&#038;fc1=000000&#038;lc1=0000FF&#038;t=fukata-22&#038;o=9&#038;p=8&#038;l=as1&#038;m=amazon&#038;f=ifr&#038;md=1X69VDGQCMF7Z30FM082&#038;asins=B002NSDWPM" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe></p>
<p>USBタイプのキーボードであればこちらがオススメです。</p>
<p>次回はこれらのキーボードショートカットを実際に使用して、効率良くJavaコーディングする方法を書きたいと思います。</p>
]]></content:encoded>
					
					<wfw:commentRss>/archives/4482/feed/</wfw:commentRss>
			<slash:comments>5</slash:comments>
		
		
			</item>
	</channel>
</rss>
